package main

import (
	"fmt"
	"net/http"
)

const cookieMonster = `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠶⠦⡞⢳⣶⡄⠙⡄⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⣠⣤⣹⡜⠛⠁⣠⠗⠛⠉⠙⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣄⣘⣟⠿⠋⠉⠉⠀⠀⠀⠀⢈⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠾⠛⠉⠀⠀⠀⠀⠀⠀⣀⣠⣤⣴⠛⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡇⣰⠀⠀⠀⢀⣠⣴⣾⣿⣿⣿⣿⣿⡄⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠛⠻⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡄⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⠀⠀⠈⠙⠻⠿⠿⠿⠟⠋⠀⢀⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠉⠻⢦⣄⣀⠀⠀⠀⠀⠀⢀⣰⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠈⠉⠉⠙⠚⠒⠀⠈⢀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠇⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠈⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡷⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣈⡓⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡶⢋⡄⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⣿⠍⢀⣀⠉⠓⣮⣟⣦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⠞⢡⡤⡾⢻⡾⢿⡏⠛⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠄⢰⠃⠀⡞⠁⣰⡀⢻⣽⣄⣙⣦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣠⣾⡷⢶⣿⢀⣇⣸⣇⣸⣿⣰⣼⣤⣴⠶⠶⣤⣄⣾⠿⠶⣿⣦⣾⢴⣾⣿⠤⠿⣧⡿⠛⠛⡛⢻⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣾⠏⢀⣀⣀⣹⣿⡿⠉⣹⣯⣀⠙⣿⡏⢠⣤⣄⠈⢻⣿⠀⠀⢻⡟⠁⣸⠟⣿⠀⠀⣿⣿⠀⠸⠟⢻⡇⠀⠀⠀⠀⠀
⠀⠀⠀⢸⣟⠀⣸⡏⠙⣛⣹⡇⠀⣿⡙⣿⠀⣿⡇⢸⣏⣹⡇⢠⣿⠀⠀⣀⠀⠰⣿⠀⢹⡀⠀⣿⢿⡇⠀⣴⣾⣷⡆⠀⠀⠀⠀
⠀⠀⠀⠸⣿⡀⠹⣷⡾⠛⢻⣷⡀⠙⠿⠋⢠⣿⣧⠀⠛⠋⢀⣾⢿⡆⠀⣿⣧⡀⢹⣧⢸⡇⢀⡏⢸⣇⠀⠀⠀⢸⣧⠀⠀⠀⠀
⠀⢠⣤⣠⣹⢿⣦⣤⣤⣴⣿⣩⣿⠿⢾⣶⣿⣧⣽⣿⣶⣶⣿⣧⣼⣿⡶⢿⣿⣿⠾⢿⣿⠿⣿⣿⠾⠿⠷⢿⡟⠛⠛⠛⢿⣦⠀
⠀⢸⠇⠀⠻⣷⡏⠁⠀⣿⣿⠁⢀⣤⡀⠈⢻⡇⠀⠀⣿⣿⠀⢿⡇⠀⢀⣤⣿⡄⠀⠀⠀⠀⢈⣿⠀⢸⣶⣾⡇⠈⣿⠦⣀⣿⠆
⠀⣾⠀⢠⡀⠉⠀⣀⠀⢻⡇⠀⣿⡏⣿⠀⠈⣿⠀⠀⠘⠛⠀⢸⣷⣄⠘⢿⣿⣟⣿⠀⠀⣿⠛⣿⠀⢠⣤⣿⡇⠀⠀⠀⢿⡏⠀
⠀⡏⠀⣼⢿⣦⡾⣿⠀⢸⣇⠀⠙⠗⠋⠀⣰⡟⢀⣿⡄⠀⠀⢸⡿⠿⠂⠀⠈⣿⢿⡀⢀⡏⠀⢸⡄⠘⠋⢻⡇⠀⣿⣆⠘⣿⡄
⢠⣿⣤⣿⠀⠉⠀⣿⣤⣼⡟⢷⣤⣤⣤⣶⢿⣧⣼⡟⠿⠶⠶⢾⣧⣤⣤⣤⡾⠏⢸⣧⣼⡇⠀⠸⠿⠶⠶⠿⣷⣶⡿⢻⣶⡿⠗
⠀⠈⠀⠈⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`

func main() {
	http.HandleFunc("/cookie", func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set("Content-Type", "text/plain")
		fmt.Fprintf(w, "%s\n\n says thanks for the cookie!\n", cookieMonster)
	})

	fmt.Println("Server is listening on port 8080...")
	if err := http.ListenAndServe(":8080", nil); err != nil {
		fmt.Println("Failed to start server:", err)
	}
}
